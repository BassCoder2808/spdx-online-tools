# Using python3.10.6 as the base image
FROM python:3.10.6 as base

# Create the folder spdx and cd to it
WORKDIR /spdx

# Copy the requirements.txt file into the container
COPY requirements.txt .

# install psycopg2 dependencies
RUN apt-get update \
    && apt-get -y install libpq-dev gcc python-dev musl-dev
	
# install psycopg2
RUN pip install psycopg2-binary==2.9.3

# Install the python dependencies
RUN pip install -r requirements.txt

# -----------------------------

# Container for for SPDX Online tools
FROM base as production

# Setting current work directory to /spdx
WORKDIR /spdx

# Copy everthing into the container
COPY . .

# Install supervisor
RUN apt-get update && \
    apt-get -y install supervisor && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# Use JDK 11
ENV JAVA_HOME=/opt/java/openjdk
COPY --from=eclipse-temurin:11 $JAVA_HOME $JAVA_HOME
ENV PATH="${JAVA_HOME}/bin:${PATH}"

# Fetch the latest tagged licenses from Github for use in the Java license compares
RUN apt-get update \
    && apt-get -y install git
RUN mkdir /licenses && cd /licenses && git clone https://github.com/spdx/license-list-data.git --depth=1 && cd license-list-data && git fetch --tags && git checkout $(git describe --tags `git rev-list --tags --max-count=1`)
RUN mkdir /licenses/current && cp /licenses/license-list-data/website/*.jsonld /licenses/current && cp /licenses/license-list-data/website/licenses.json /licenses/current && cp /licenses/license-list-data/website/exceptions.json /licenses/current

# Clean up apt lists
RUN rm -rf /var/lib/apt/lists/*

# Move to spdxonlinetools folder
WORKDIR /spdx

# Exposing ports where the server listens 
EXPOSE 8000

# Move the configuration for supervisor to access
RUN mv ./supervisor_api.conf /etc/supervisor/conf.d

# Start the supervisor
CMD /usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf

# Install necessary packages
RUN apt-get update && \
    apt-get install -y cron && \
    rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /spdx

# Copy the Python script to the container
COPY scripts/cleanup.py .

# Add the crontab file
ADD crontab /etc/cron.d/cleanup-cron

# Give execution rights on the cron job
RUN chmod 0644 /etc/cron.d/cleanup-cron

# Apply cron job
RUN crontab /etc/cron.d/cleanup-cron

# Run the command on container startup
CMD ["cron", "-f"]
